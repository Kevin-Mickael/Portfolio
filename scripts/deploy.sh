#!/bin/bash

# Script de d√©ploiement optimis√© pour Cloudflare Pages
# Creativfolio - Portfolio de Kevin

set -e  # Arr√™ter en cas d'erreur

echo "üöÄ D√©ploiement Creativfolio sur Cloudflare Pages..."

# Couleurs pour les logs
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Fonction de log
log() {
    echo -e "${BLUE}[$(date +'%Y-%m-%d %H:%M:%S')]${NC} $1"
}

error() {
    echo -e "${RED}[ERREUR]${NC} $1"
}

success() {
    echo -e "${GREEN}[SUCC√àS]${NC} $1"
}

warning() {
    echo -e "${YELLOW}[ATTENTION]${NC} $1"
}

# V√©rification des pr√©requis
check_prerequisites() {
    log "V√©rification des pr√©requis..."
    
    # V√©rifier Node.js
    if ! command -v node &> /dev/null; then
        error "Node.js n'est pas install√©"
        exit 1
    fi
    
    # V√©rifier npm
    if ! command -v npm &> /dev/null; then
        error "npm n'est pas install√©"
        exit 1
    fi
    
    # V√©rifier wrangler (optionnel)
    if ! command -v wrangler &> /dev/null; then
        warning "Wrangler n'est pas install√© (optionnel pour le d√©ploiement)"
    fi
    
    success "Pr√©requis v√©rifi√©s"
}

# Nettoyage
cleanup() {
    log "Nettoyage des fichiers temporaires..."
    rm -rf .next
    rm -rf out
    success "Nettoyage termin√©"
}

# Installation des d√©pendances
install_dependencies() {
    log "Installation des d√©pendances..."
    npm ci --production=false
    success "D√©pendances install√©es"
}

# Tests et validation
run_tests() {
    log "Ex√©cution des tests..."
    
    # Test du sitemap
    if npm run test-sitemap; then
        success "Tests du sitemap pass√©s"
    else
        error "Tests du sitemap √©chou√©s"
        exit 1
    fi
    
    # Linting
    if npm run lint; then
        success "Linting pass√©"
    else
        warning "Linting avec des avertissements"
    fi
}

# Build de production
build_project() {
    log "Build de production..."
    
    if npm run build; then
        success "Build r√©ussi"
    else
        error "Build √©chou√©"
        exit 1
    fi
}

# Validation du build
validate_build() {
    log "Validation du build..."
    
    # V√©rifier que le sitemap existe
    if [ -f "public/sitemap.xml" ]; then
        success "Sitemap g√©n√©r√©"
    else
        error "Sitemap manquant"
        exit 1
    fi
    
    # V√©rifier la taille du sitemap
    sitemap_size=$(wc -c < public/sitemap.xml)
    if [ "$sitemap_size" -gt 52428800 ]; then  # 50MB
        error "Sitemap trop volumineux ($sitemap_size bytes)"
        exit 1
    else
        success "Taille du sitemap OK ($sitemap_size bytes)"
    fi
    
    # V√©rifier les fichiers essentiels
    essential_files=("public/robots.txt" "public/favicon.ico" "public/manifest.json")
    for file in "${essential_files[@]}"; do
        if [ -f "$file" ]; then
            success "Fichier $file pr√©sent"
        else
            warning "Fichier $file manquant"
        fi
    done
}

# Optimisation pour Cloudflare
optimize_for_cloudflare() {
    log "Optimisation pour Cloudflare Pages..."
    
    # V√©rifier la configuration Wrangler
    if [ -f "wrangler.toml" ]; then
        success "Configuration Wrangler pr√©sente"
    else
        warning "Configuration Wrangler manquante"
    fi
    
    # V√©rifier les headers
    if [ -f "public/_headers" ]; then
        success "Headers Cloudflare configur√©s"
    else
        warning "Headers Cloudflare manquants"
    fi
    
    # V√©rifier les redirects
    if [ -f "public/_redirects" ]; then
        success "Redirects configur√©s"
    else
        warning "Redirects manquants"
    fi
}

# D√©ploiement (optionnel)
deploy() {
    if command -v wrangler &> /dev/null; then
        log "D√©ploiement avec Wrangler..."
        
        # V√©rifier l'authentification
        if wrangler whoami &> /dev/null; then
            success "Authentification Wrangler OK"
            
            # D√©ployer
            if wrangler pages deploy out --project-name creativfolio; then
                success "D√©ploiement r√©ussi"
            else
                error "D√©ploiement √©chou√©"
                exit 1
            fi
        else
            error "Authentification Wrangler √©chou√©e"
            warning "Connectez-vous avec: wrangler login"
            exit 1
        fi
    else
        warning "Wrangler non install√© - d√©ploiement manuel requis"
        log "Pour d√©ployer manuellement:"
        log "1. Uploadez le contenu du dossier 'out' vers Cloudflare Pages"
        log "2. Ou installez Wrangler: npm install -g wrangler"
    fi
}

# G√©n√©ration du rapport
generate_report() {
    log "G√©n√©ration du rapport de d√©ploiement..."
    
    report_file="deploy-report-$(date +%Y%m%d-%H%M%S).txt"
    
    cat > "$report_file" << EOF
Rapport de d√©ploiement Creativfolio
==================================
Date: $(date)
Version: $(node -p "require('./package.json').version")

Fichiers g√©n√©r√©s:
- sitemap.xml: $(wc -c < public/sitemap.xml) bytes
- URLs dans le sitemap: $(grep -c '<url>' public/sitemap.xml)

Build info:
- Node.js: $(node --version)
- npm: $(npm --version)
- Next.js: $(node -p "require('./package.json').dependencies.next")

Optimisations:
- Compression: activ√©e
- Cache: configur√©
- Headers: optimis√©s
- S√©curit√©: renforc√©e

Status: ‚úÖ Pr√™t pour le d√©ploiement
EOF
    
    success "Rapport g√©n√©r√©: $report_file"
}

# Fonction principale
main() {
    log "D√©but du processus de d√©ploiement..."
    
    check_prerequisites
    cleanup
    install_dependencies
    run_tests
    build_project
    validate_build
    optimize_for_cloudflare
    deploy
    generate_report
    
    success "Processus de d√©ploiement termin√© avec succ√®s !"
    log "Votre site est pr√™t pour la production sur Cloudflare Pages"
}

# Gestion des erreurs
trap 'error "Script interrompu"; exit 1' INT TERM

# Ex√©cution
main "$@" 